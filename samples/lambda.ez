program lambda

procedure sort(inout v is vector of integer, in f is function(in integer, in integer) return boolean)
    local i is integer
    local j is integer
    local tmp is integer
begin
    for i in 0 .. v.size() - 1 do
        for j in i + 1 .. v.size() do
            if not f(v[i], v[j]) then
                tmp = v[i]
                v[i] = v[j]
                v[j] = tmp
            endif
        endfor
    endfor
end

function lambda(in args is vector of string) return integer
    local v is vector of integer
    local i is integer
    local n is integer
begin
    for i in 0 .. 10 do
        print "enter a number: "
        read n
        v.push(n)
    endfor

    sort(v, lambda (in x is integer, in y is integer) return boolean is return x < y)

    print "removing even numbers\n"
    v.filter(lambda (in x is integer) return boolean is return x % 2 == 1)

    print "double each numbers"
    v.map(lambda (inout x is integer) is x = x * 2)

    print v, "\n"

    print "vector sum is: ", v.reduce(lambda (in vvalue is integer, in reduction is integer) return integer is return vvalue + reduction, 0), "\n"

    return 0
end

